#!/bin/sh

# 1>/dev/null 2>&1


# docker run --name=$PROJECT_NAME --restart=always -p 80:80 -v `pwd`/conf.d:/etc/nginx/conf.d --env NODE_ENV=dev -itd $TARGET_NAME

# read -r -p "是否进入到容器中? [Y/n] " input

# case $input in
#     [yY][eE][sS]|[yY])
#         docker exec -it $PROJECT_NAME ash
#     ;;

#     # [nN][oO]|[nN])
#     #     echo "No"
#     # ;;
# esac

# TODO 需要做参数区分处理

TARGET_NAME='xrosy/nginx'
PROJECT_NAME='xrosy-nginx'
BASE_PATH=$(cd $(dirname $0); pwd)


# 帮助信息
#
helper ()
{
cat <<HELP

Usag: sh $BASH_SOURCE <COMMAND> [OPTIONS]

  A docker shortcut for current project.

  Commands:
    build           create docker image for the project.
    rebuild         *

HELP
}


# 停止Docker容器
#
stopDockerContainer ()
{
docker stop $PROJECT_NAME 1>/dev/null 2>&1
}


# 移除Docker容器
#
rmDockerContainer ()
{
docker rm $PROJECT_NAME  1>/dev/null 2>&1
}


# 构建镜像文件
#
buildDockerImage ()
{
if [ ! -f 'Dockerfile' ]; then
    helper
    exit 1
fi

docker build -t $TARGET_NAME .
}


createDockerContainer ()
{
docker run \
    --name=$PROJECT_NAME \
    --restart=always \
    --env NODE_ENV=dev\
    -p 80:80 \
    -v `pwd`/conf.d:/etc/nginx/conf.d \
    -v `pwd`/_www:/xrosy/_www \
    -itd \
    $TARGET_NAME
}

startDockerContainer ()
{
docker start $PROJECT_NAME
}


# 主函数
#
main ()
{
case $1 in
    build|b)
        if [ $2 == '-r' ]; then
            buildDockerImage $2
        else
            buildDockerImage
        fi
    ;;

    rebuild)
        stopDockerContainer
        rmDockerContainer
        buildDockerImage
    ;;

    stop)
        stopDockerContainer
    ;;

    rm)
        rmDockerContainer
    ;;

    start)
        createDockerContainer
        # startDockerContainer
    ;;

    n)
        if [ $2 == '-r' ]; then
            docker exec -it $PROJECT_NAME nginx -s reload
        fi
    ;;

    *)
        helper
    ;;
esac
}

main "$@"

